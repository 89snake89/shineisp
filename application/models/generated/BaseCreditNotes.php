<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CreditNotes', 'doctrine');

/**
 * BaseCreditNotes
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $creditnote_id
 * @property integer $number
 * @property date $creationdate
 * @property integer $invoice_id
 * @property float $total_net
 * @property float $total_vat
 * @property float $total
 * @property string $note
 * @property Invoices $Invoices
 * @property Doctrine_Collection $CreditNotesItems
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCreditNotes extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('credit_notes');
        $this->hasColumn('creditnote_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('number', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('creationdate', 'date', null, array(
             'type' => 'date',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('invoice_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('total_net', 'float', 10, array(
             'type' => 'float',
             'length' => 10,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.00',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('total_vat', 'float', 10, array(
             'type' => 'float',
             'length' => 10,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.00',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('total', 'float', 10, array(
             'type' => 'float',
             'length' => 10,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '0.00',
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('note', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Invoices', array(
             'local' => 'invoice_id',
             'foreign' => 'invoice_id'));

        $this->hasMany('CreditNotesItems', array(
             'local' => 'creditnote_id',
             'foreign' => 'creditnote_id'));
    }
}