<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Statuses', 'doctrine');

/**
 * BaseStatuses
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $status_id
 * @property string $code
 * @property string $status
 * @property string $section
 * @property integer $public
 * @property Doctrine_Collection $Customers
 * @property Doctrine_Collection $Domains
 * @property Doctrine_Collection $DomainsTasks
 * @property Doctrine_Collection $InvoicesPurchases
 * @property Doctrine_Collection $Orders
 * @property Doctrine_Collection $OrdersItems
 * @property Doctrine_Collection $PanelsActions
 * @property Doctrine_Collection $Servers
 * @property Doctrine_Collection $Tickets
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStatuses extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('statuses');
        $this->hasColumn('status_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('code', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('status', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('section', 'string', 200, array(
             'type' => 'string',
             'length' => 200,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
        $this->hasColumn('public', 'integer', 1, array(
             'type' => 'integer',
             'length' => 1,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Customers', array(
             'local' => 'status_id',
             'foreign' => 'status_id'));

        $this->hasMany('Domains', array(
             'local' => 'status_id',
             'foreign' => 'status_id'));

        $this->hasMany('DomainsTasks', array(
             'local' => 'status_id',
             'foreign' => 'status_id'));

        $this->hasMany('InvoicesPurchases', array(
             'local' => 'status_id',
             'foreign' => 'status_id'));

        $this->hasMany('Orders', array(
             'local' => 'status_id',
             'foreign' => 'status_id'));

        $this->hasMany('OrdersItems', array(
             'local' => 'status_id',
             'foreign' => 'status_id'));

        $this->hasMany('PanelsActions', array(
             'local' => 'status_id',
             'foreign' => 'status_id'));

        $this->hasMany('Servers', array(
             'local' => 'status_id',
             'foreign' => 'status_id'));

        $this->hasMany('Tickets', array(
             'local' => 'status_id',
             'foreign' => 'status_id'));
    }
}