<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('CustomersDomainsRegistrars', 'doctrine');

/**
 * BaseCustomersDomainsRegistrars
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $nic_id
 * @property integer $customer_id
 * @property integer $domain_id
 * @property integer $registrars_id
 * @property date $creationdate
 * @property string $value
 * @property Registrars $Registrars
 * @property Customers $Customers
 * @property Domains $Domains
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCustomersDomainsRegistrars extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('customers_domains_registrars');
        $this->hasColumn('nic_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('customer_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('domain_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('registrars_id', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('creationdate', 'date', null, array(
             'type' => 'date',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('value', 'string', 100, array(
             'type' => 'string',
             'length' => 100,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Registrars', array(
             'local' => 'registrars_id',
             'foreign' => 'registrars_id'));

        $this->hasOne('Customers', array(
             'local' => 'customer_id',
             'foreign' => 'customer_id'));

        $this->hasOne('Domains', array(
             'local' => 'domain_id',
             'foreign' => 'domain_id'));
    }
}